# CI WorkFlow for build, test and release of Plugin Packages
name: CI for Plugin Packages
on:
  push:
    branches:
      - '*'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - '*'
    paths-ignore:
      - 'plugins/**'
      - 'hack/test-plugin-manifests.sh'
      - 'hack/update-plugin-manifests.sh'
      - 'hack/update-preflight-manifest.sh'
      - 'hack/update-log-collector-manifest.sh'
      - '.github/workflows/plugins.yml'

jobs:
  pre-build:
    runs-on: ubuntu-latest
    outputs:
      preflight: ${{ steps.filter.outputs.preflight }}
      logCollector: ${{ steps.filter.outputs.logCollector }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

#      - name: Run yamllint
#        uses: reviewdog/action-yamllint@v1
#        with:
#          fail_on_error: true
#          reporter: local
#          filter_mode: nofilter
#
#      - name: Run golangci-lint
#        uses: golangci/golangci-lint-action@v2
#        with:
#          version: v1.30
#
#      - name: Run Shell lint
#        run: hack/run-shell-lint.sh
#
#      - name: Verify code patterns
#        run: hack/verify-code-patterns.sh
#
#      - name: Detect File Changes
#        uses: dorny/paths-filter@v2
#        id: filter
#        with:
#          base: ${{ github.ref }}
#          filters: |
#            preflight:
#              - 'hack/**'
#              - '.krew/tvk-preflight.yaml'
#              - 'tools/preflight/**'
#              - '.goreleaser.yml'
#            logCollector:
#              - 'cmd/**'
#              - 'hack/**'
#              - '.krew/tvk-log-collector.yaml'
#              - 'tools/log_collector/**'
#              - '.goreleaser.yml'

  preflight:
    runs-on: ubuntu-latest
    needs: pre-build
    # for 'ref/tags/', 'needs.pre-build.outputs.preflight=false' so to run preflight job on tags as well added
    # startsWith(github.ref, 'refs/tags/') condition
#    if: (needs.pre-build.outputs.preflight == 'true') || startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Build Preflight Package
      run: hack/build-preflight-artifacts.sh

      #- name: Run integration tests
      #  run: hack/run-integration-tests.sh

    - name: Ensure Required Utilities Installed
      run: hack/install-required-utilities.sh

    - name: Test Preflight Plugin Locally
      run: |
        hack/generate-test-preflight-plugin-manifest.sh
        hack/test-preflight-plugin-locally.sh

    - name: Upload Preflight Plugin Packges to github artifact
      uses: actions/upload-artifact@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: preflight
        path: |
          build/preflight.tar.gz
          build/preflight-sha256.txt

  log-collector:
    runs-on: ubuntu-latest
    needs: pre-build
    # for 'ref/tags/', 'needs.pre-build.outputs.preflight=false' so to run preflight job on tags as well added
    # startsWith(github.ref, 'refs/tags/') condition
#    if: (needs.pre-build.outputs.logCollector == 'true') || startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v2

#      - name: Setup Go
#        uses: actions/setup-go@v2
#        with:
#          go-version: 1.15
#
#      - name: Build Log-Collector Packages
#        uses: goreleaser/goreleaser-action@v2
#        with:
#          version: latest
#          args: release --snapshot --skip-publish --rm-dist
#
#      #- name: Run integration tests
#      #  run: hack/run-integration-tests.sh
#
#      - name: Ensure Required Utilities Installed
#        run: hack/install-required-utilities.sh
#
#      - name: Test Log-Collector Plugin Locally
#        run: |
#          hack/generate-test-log-collector-plugin-manifest.sh
#          hack/test-log-collector-plugin-locally.sh

  pre-release:
    runs-on: ubuntu-latest
    outputs:
      create_release: ${{ steps.detect_changes.outputs.create_release }}
      release_preflight: ${{ steps.detect_changes.outputs.release_preflight }}
      release_log_collector: ${{ steps.detect_changes.outputs.release_log_collector }}
    if: startsWith(github.ref, 'refs/tags/')
    needs: [preflight, log-collector]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Determine file changes to create release
        id: detect_changes
        run: ./run.sh

  release:
    runs-on: ubuntu-latest
    needs: pre-release
    if: needs.pre-release.outputs.create_release == 'true' && startsWith(github.ref, 'refs/tags/')
    steps:
      - run: echo ${{needs.pre-release.outputs.create_release}} ${{needs.pre-release.outputs.release_preflight}}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v2
        if: needs.pre-release.outputs.release_preflight == 'true'
        with:
          name: preflight
          path: build

      - name: Update GoReleaser Config for Release
        run: hack/update-goreleaser-yaml.sh
        env:
          release_preflight: ${{needs.pre-release.outputs.release_preflight}}
          release_log_collector: ${{needs.pre-release.outputs.release_log_collector}}

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Release with GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
